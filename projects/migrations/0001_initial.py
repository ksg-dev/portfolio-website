# Generated by Django 5.2.1 on 2025-05-22 00:54

import django.db.models.deletion
import markdownx.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                (
                    "code",
                    models.CharField(
                        help_text="Short code for display in hexagon (e.g., ML, WEB)",
                        max_length=3,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#00f0ff",
                        help_text="Hex color code for display accent (e.g., #00f0ff)",
                        max_length=7,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome icon name (e.g. fa-robot)",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "system types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome icon name (e.g., fa-python)",
                        max_length=50,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#00f0ff",
                        help_text="Hex color code (e.g., #00f0ff)",
                        max_length=7,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "technologies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SystemModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                (
                    "system_id",
                    models.CharField(
                        blank=True,
                        help_text="System identifier (e.g. SYS-001)",
                        max_length=10,
                    ),
                ),
                ("subtitle", models.CharField(blank=True, max_length=200)),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Brief summary for display on project cards",
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Feature this project on the homepage"
                    ),
                ),
                ("content", markdownx.models.MarkdownxField()),
                ("challenges", markdownx.models.MarkdownxField(blank=True)),
                ("solutions", markdownx.models.MarkdownxField(blank=True)),
                ("outcome", markdownx.models.MarkdownxField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                ("live_url", models.URLField(blank=True)),
                ("demo_url", models.URLField(blank=True)),
                (
                    "completion_percent",
                    models.IntegerField(
                        default=100, help_text="Completion percentage (0-100)"
                    ),
                ),
                (
                    "complexity",
                    models.IntegerField(
                        choices=[
                            (1, "Basic"),
                            (2, "Intermediate"),
                            (3, "Advanced"),
                            (4, "Complex"),
                            (5, "Enterprise"),
                        ],
                        default=2,
                        help_text="Project Complexity level",
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        help_text="Thumbnail image (400x300px recommended)",
                        null=True,
                        upload_to="projects/thumbnails/",
                    ),
                ),
                (
                    "banner_image",
                    models.ImageField(
                        blank=True,
                        help_text="Header banner image (1200x400px recommended)",
                        null=True,
                        upload_to="projects/banners/",
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True,
                        help_text="Featured image for homepage (800x600px recommended)",
                        null=True,
                        upload_to="projects/featured/",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="systems",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_projects",
                    models.ManyToManyField(
                        blank=True,
                        to="projects.systemmodule",
                        verbose_name="Related Systems",
                    ),
                ),
                (
                    "system_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="systems",
                        to="projects.systemtype",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        blank=True, related_name="systems", to="projects.technology"
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="SystemImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="projects/gallery/")),
                ("caption", models.CharField(blank=True, max_length=255)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="projects.systemmodule",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="SystemFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome icon name (e.g. fa-check)",
                        max_length=50,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="projects.systemmodule",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
    ]
